apiVersion: v1
kind: Service
metadata:
  name: api-service
  labels:
    app.kubernetes.io/instance: insta
spec:
  type: ClusterIP
  ports:
    - name: http
      port: 80
      targetPort: http
  selector:
    app.kubernetes.io/name: php
    app.kubernetes.io/instance: insta
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: api-config-map
  labels:
    app.kubernetes.io/component: api
    app.kubernetes.io/instance: insta
data:
  nginx-config : |
    server {
      index index.php;
      error_log  /var/log/nginx/error.log;
      access_log /var/log/nginx/access.log;
      root /var/www/public;
      
      location / {
        try_files $uri /index.php$is_args$args;
      }

      location ~ \.php$ {
        try_files $uri =401;

        fastcgi_split_path_info ^(.+\.php)(/.+)$;
        include fastcgi_params;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_param SCRIPT_NAME $fastcgi_script_name;
        fastcgi_index index.php;
        fastcgi_pass 127.0.0.1:9000;
      }
    }
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-deployment
  labels:
    app.kubernetes.io/component: api
    app.kubernetes.io/instance: insta
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: php
      app.kubernetes.io/instance: insta
  template:
    metadata:
      labels:
        app.kubernetes.io/name: php
        app.kubernetes.io/instance: insta
    spec:
      terminationGracePeriodSeconds: 0
      containers:
        - name: api-container-php
          image: ghcr.io/kpatel20538/insta-api
          lifecycle:
            postStart:
              exec:
                command: ["cp", "-r", "/app/.", "/var/www"]
          env:
            - name: MYSQL_DATABASE
              valueFrom:
                configMapKeyRef:
                  name: shared-config-map
                  key: mysqlDatabase
            - name: MYSQL_USER
              valueFrom:
                secretKeyRef:
                  name: shared-secret
                  key: mysqlUsername
            - name: MYSQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: shared-secret
                  key: mysqlPassword
          ports:
            - name: fastcgi
              containerPort: 9000
          volumeMounts:
            - name: api-volume-code
              mountPath: /var/www
        - name: api-container-nginx
          image: nginx:1.19.8-alpine
          ports:
            - name: http
              containerPort: 80
          volumeMounts: 
            - name: api-volume-code
              mountPath: /var/www
            - name: api-volume-config
              mountPath: /etc/nginx/conf.d
          livenessProbe:
            periodSeconds: 30
            httpGet:
              path: /get
              port: http
          readinessProbe:
            periodSeconds: 15
            httpGet:
              path: /get
              port: http
      volumes:
        - name: api-volume-code
          emptyDir: {}
        - name: api-volume-config
          configMap: 
            name: api-config-map
            items:
              - key: nginx-config
                path: default.conf
