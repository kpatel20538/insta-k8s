apiVersion: v1
kind: Service
metadata:
  name: database-service
  labels:
    app.kubernetes.io/instance: insta
spec:
  clusterIP: None
  ports:
    - name: mysql
      port: 3306
      targetPort: mysql
  selector:
    app.kubernetes.io/name: mysql
    app.kubernetes.io/instance: insta
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: database-pvc
  labels:
    app.kubernetes.io/instance: insta
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 2Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: database-deployment
  labels:
    app.kubernetes.io/instance: insta
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: mysql
      app.kubernetes.io/instance: insta
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: mysql
        app.kubernetes.io/instance: insta
    spec:
      containers:
      - name: database-container
        image: mysql:8.0
        env:
          - name: MYSQL_DATABASE
            valueFrom:
              configMapKeyRef:
                name: shared-config-map
                key: mysqlDatabase
          - name: MYSQL_ROOT_PASSWORD
            valueFrom:
              secretKeyRef:
                name: shared-secret
                key: mysqlRootPassword
          - name: MYSQL_USER
            valueFrom:
              secretKeyRef:
                name: shared-secret
                key: mysqlUsername
          - name: MYSQL_PASSWORD
            valueFrom:
              secretKeyRef:
                name: shared-secret
                key: mysqlPassword
        ports:
          - name: mysql
            containerPort: 3306
        volumeMounts:
          - name: database-volume
            mountPath: /var/lib/mysql
      volumes:
        - name: database-volume
          persistentVolumeClaim:
            claimName: database-pvc
